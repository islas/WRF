

on :
  workflow_call :
    inputs :
      label : 
        required : true
        type     : string
      archive :
        required : true
        type     : string
      
      name     :
        required : true
        type     : string
      host     :
        required : true
        type     : string
      fileroot :
        required : true
        type     : string
      account  :
        required : true
        type     : string
      tests    :
        required : true
        type     : string
      mkdirs   :
        required : true
        type     : boolean
      args     :
        required : false
        type     : string
        default  : ""
      pool     :
        required : false
        type     : number
        default  : 1
      tpool      :
        required : false
        type     : number
        default  : 1
      


jobs:
  wrf_test :

    # Is 5 days a reasonable wait time for testing?
    timeout-minutes: 7200
    name: Test ${{ inputs.name }} on ${{ inputs.host }}
    runs-on: ${{ inputs.host }}
    env :
      LOG_SUFFIX : ${{ github.event_name == 'push' && 'master' || github.event.number }}
    steps:
    - uses: actions/checkout@v3
      with:
        path      : main
        submodules: true
    
    # Immediately copy out to # of tests to do
    - name: Create testing directories
      if  : ${{ inputs.mkdirs }}
      id  : cpTestDirs
      run : |
        for testDir in ${{ join( fromJson( inputs.tests ), ' ' ) }}; do
          echo "Creating duplicate directory for $testDir"
          # Remove if it exists to get a fresh start
          rm -rf $testDir
          rsync -a --exclude '.git' main/ $testDir
        done

    - name: Test ${{ inputs.name }}
      id  : runTest
      run: |
        if [ "${{ inputs.mkdirs }}" = "true" ]; then
          ALT_DIRS="-alt ../${{ join( fromJson( inputs.tests ), '/.ci ../' ) }}/.ci"
        fi
        ./main/hpc-workflows/.ci/runner.py \
          ./main/.ci/${{ inputs.fileroot }}.json \
          -t   ${{ join( fromJson( inputs.tests ), ' ' ) }}  \
          -a "${{ inputs.account }}"             \
          -p ${{ inputs.pool}}                   \
          ${{ inputs.args }} $ALT_DIRS


    - name: Report failed tests and steps
      if : ${{ failure() }}
      run : |
        # move log files to safe location
        ./main/hpc-workflows/.ci/relocator.py ./main/.ci/${{ inputs.fileroot }}.log ${{ inputs.archive }}/$LOG_SUFFIX

        # also output the failed tests
        failedTests=$( python -c "import json; data = json.load( open( '${{ inputs.archive }}/$LOG_SUFFIX/${{ inputs.fileroot }}.log' ) ); print( [ test for test in data.keys() if test != 'metadata' and not data[test]['success'] ] );" )

        echo "failedTests=$failedTests"
        echo "failedTests=$failedTests" >> $GITHUB_OUTPUT

        # report on them
        ./main/hpc-workflows/.ci/reporter.py ${{ inputs.archive }}/$LOG_SUFFIX/${{ inputs.fileroot }}.log ./hpc-workflows/.ci/runner.py

    - name: Clean up testing directories
      if : ${{ success() }}
      id  : rmTestDirs
      run : |
        for testDir in ${{ join( fromJson( inputs.tests ), ' ' ) }}; do
          echo "Removing duplicate directory for $testDir"
          rm -rf $testDir
        done

    - name : Remove '${{ inputs.label }}' label
      if : ${{ !cancelled() && github.event.label.name == inputs.label }}
      env:
        PR_NUMBER: ${{ github.event.number }}
      run: |
        curl \
          -X DELETE \
          -H "Accept: application/vnd.github.v3+json" \
          -H 'Authorization: token ${{ github.token }}' \
          https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/labels/${{ inputs.label }}
    
  outputFailedTests :
    needs : wrf_test
    if : ${{ always() && needs.wrf_test.result == 'failure' }}
    runs-on : ${{ inputs.host }}
    strategy : 
      matrix :
         failedTest : ${{ fromJson( needs.wrf_test.outputs.failedTests )}}
    name : Output ${{ matrix.failedTest.test }} failure
    steps :
    - run : |
        echo "${{ matrix.failedTest.test }}"

  
